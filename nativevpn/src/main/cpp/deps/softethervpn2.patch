diff --git a/CMakeLists.txt b/CMakeLists.txt
index 8b495b69..45d8789c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -3,7 +3,7 @@ cmake_minimum_required(VERSION 3.15)
 set(BUILD_NUMBER CACHE STRING "The number of the current build.")
 
 if ("${BUILD_NUMBER}" STREQUAL "")
-	set(BUILD_NUMBER "5186")
+	set(BUILD_NUMBER "5187")
 endif()
 
 if (BUILD_NUMBER LESS 5180)
@@ -27,8 +27,8 @@ project("SoftEther VPN"
 
 set(CMAKE_C_STANDARD 99)
 
-set(TOP_DIRECTORY ${CMAKE_SOURCE_DIR})
-set(BUILD_DIRECTORY ${CMAKE_BINARY_DIR})
+set(TOP_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
+set(BUILD_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/${CMAKE_CURRENT_BINARY_DIR})
 
 # We define a dedicated variable because CMAKE_BUILD_TYPE can have different
 # configurations than "Debug" and "Release", such as "RelWithDebInfo".
diff --git a/CMakeSettings.json b/CMakeSettings.json
index 9853e477..4817c860 100644
--- a/CMakeSettings.json
+++ b/CMakeSettings.json
@@ -1,5 +1,5 @@
 ï»¿{
-  "environments": [ { "BuildNumber": "5186" } ],
+  "environments": [ { "BuildNumber": "5187" } ],
   "configurations": [
     {
       "name": "x64-native",
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index c49a3c78..a7721b61 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -136,40 +136,45 @@ add_subdirectory(Cedar)
 add_subdirectory(Mayaqua)
 
 # vpnserver
-add_subdirectory(vpnserver)
+#add_subdirectory(vpnserver)
 
 # vpnclient
 add_subdirectory(vpnclient)
 
 # vpnbridge
-add_subdirectory(vpnbridge)
+#add_subdirectory(vpnbridge)
 
 # vpncmd
-add_subdirectory(vpncmd)
+#add_subdirectory(vpncmd)
 
 # vpntest
-add_subdirectory(vpntest)
+#add_subdirectory(vpntest)
 
 # libhamcore
 add_subdirectory(libhamcore)
 
 # hamcorebuilder utility
-add_subdirectory(hamcorebuilder)
+#add_subdirectory(hamcorebuilder)
 
 # hamcore.se2 archive file
-add_custom_target(hamcore-archive-build
-  ALL
-  DEPENDS "${BUILD_DIRECTORY}/hamcore.se2"
+configure_file(
+    "$ENV{HAMCORE_SE2}/hamcore.se2"
+    "${BUILD_DIRECTORY}/hamcore.se2"
+    COPYONLY
 )
 
-add_custom_command(
-  COMMENT "Building hamcore.se2 archive file..."
-  COMMAND hamcorebuilder "hamcore.se2" "${TOP_DIRECTORY}/src/bin/hamcore"
-  DEPENDS hamcorebuilder "${TOP_DIRECTORY}/src/bin/hamcore/"
-  OUTPUT "${BUILD_DIRECTORY}/hamcore.se2"
-  WORKING_DIRECTORY "${BUILD_DIRECTORY}"
-  VERBATIM
+add_custom_target(hamcore-archive-build
+    ALL
+    DEPENDS "${BUILD_DIRECTORY}/hamcore.se2"
 )
+#add_custom_command(
+#  COMMENT "Building hamcore.se2 archive file..."
+#  COMMAND hamcorebuilder "hamcore.se2" "${TOP_DIRECTORY}/src/bin/hamcore"
+#  DEPENDS hamcorebuilder "${TOP_DIRECTORY}/src/bin/hamcore/"
+#  OUTPUT "${BUILD_DIRECTORY}/hamcore.se2"
+#  WORKING_DIRECTORY "${BUILD_DIRECTORY}"
+#  VERBATIM
+#)
 
 if(WIN32)
   # PenCore
diff --git a/src/Cedar/Console.c b/src/Cedar/Console.c
index 45bab426..481fdf8b 100644
--- a/src/Cedar/Console.c
+++ b/src/Cedar/Console.c
@@ -31,6 +31,9 @@
 #include <readline/readline.h>
 #include <readline/history.h>
 #endif
+#ifdef __ANDROID__
+#include <androidhelpers.h>
+#endif
 
 // Display the help for the command
 void PrintCmdHelp(CONSOLE *c, char *cmd_name, TOKEN_LIST *param_list)
@@ -2037,7 +2040,11 @@ wchar_t *Prompt(wchar_t *prompt_str)
 #else	// OS_WIN32
 	{
 		char *prompt = CopyUniToStr(prompt_str);
+		#ifdef __ANDROID__
+		char *s = strdup("");
+		#else
 		char *s = readline(prompt);
+		#endif
 		Free(prompt);
 
 		if (s != NULL)
@@ -2047,7 +2054,9 @@ wchar_t *Prompt(wchar_t *prompt_str)
 
 			if (IsEmptyStr(s) == false)
 			{
+				#ifndef __ANDROID__
 				add_history(s);
+				#endif
 			}
 
 			ret = CopyStrToUni(s);
diff --git a/src/Mayaqua/FileIO.c b/src/Mayaqua/FileIO.c
index 5e4b9c97..a3fdce4c 100644
--- a/src/Mayaqua/FileIO.c
+++ b/src/Mayaqua/FileIO.c
@@ -19,6 +19,9 @@
 #include "Win32.h"
 
 #include <Hamcore.h>
+#ifdef __ANDROID__
+#include <androidhelpers.h>
+#endif
 
 static char exe_file_name[MAX_SIZE] = "/tmp/a.out";
 static wchar_t exe_file_name_w[MAX_SIZE] = L"/tmp/a.out";
@@ -876,7 +879,11 @@ void GetExeDir(char *name, UINT size)
 	{
 		return;
 	}
-
+	#ifdef __ANDROID__
+	char* tmp = GetAndroidTmpDir();
+	StrCpy(name, size, tmp);
+	Free(tmp);
+    #endif
 	GetDirNameFromFilePath(name, size, exe_file_name);
 }
 void GetExeDirW(wchar_t *name, UINT size)
@@ -916,6 +923,10 @@ void GetLogDir(char *name, UINT size)
 {
 #ifdef SE_LOGDIR
 	Format(name, size, SE_LOGDIR);
+#elif __ANDROID__
+	 char* tmp = GetAndroidLogDir();
+	 StrCpy(name, size, tmp);
+	 Free(tmp);
 #else
 	GetExeDir(name, size);
 #endif
@@ -934,6 +945,10 @@ void GetDbDir(char *name, UINT size)
 {
 #ifdef SE_DBDIR
 	Format(name, size, SE_DBDIR);
+#elif __ANDROID__
+	  char* tmp = GetAndroidDbDir();
+	  StrCpy(name, size, tmp);
+	  Free(tmp);
 #else
 	GetExeDir(name, size);
 #endif
@@ -951,9 +966,13 @@ void GetDbDirW(wchar_t *name, UINT size)
 void GetPidDir(char *name, UINT size)
 {
 #ifdef SE_PIDDIR
-	Format(name, size, SE_PIDDIR);
+    Format(name, size, SE_PIDDIR);
+#elif __ANDROID__
+    char* tmp = GetAndroidTmpDir();
+    StrCpy(name, size, tmp);
+	Free(tmp);
 #else
-	GetExeDir(name, size);
+    GetExeDir(name, size);
 #endif
 }
 
diff --git a/src/Mayaqua/Mayaqua.c b/src/Mayaqua/Mayaqua.c
index 86492751..42ab4448 100644
--- a/src/Mayaqua/Mayaqua.c
+++ b/src/Mayaqua/Mayaqua.c
@@ -24,6 +24,9 @@
 
 #include <locale.h>
 #include <stdlib.h>
+#ifdef __ANDROID__
+#include <androidhelpers.h>
+#endif
 
 // Global variable
 bool g_memcheck;								// Enable memory check
@@ -621,12 +624,17 @@ void CheckUnixTempDir()
 		char tmp[128], tmp2[64];
 		UINT64 now = SystemTime64();
 		IO *o;
+		#ifdef __ANDROID__
+		char* tmpDir = GetAndroidTmpDir();
+		#else
+		char* tmpDir = "/tmp";
+		#endif
 
-		MakeDir("/tmp");
+		MakeDir(tmpDir);
 
 		Format(tmp2, sizeof(tmp2), "%I64u", now);
 
-		Format(tmp, sizeof(tmp), "/tmp/.%s", tmp2);
+		Format(tmp, sizeof(tmp), "%s/.%s", tmpDir, tmp2);
 
 		o = FileCreate(tmp);
 		if (o == NULL)
@@ -634,14 +642,17 @@ void CheckUnixTempDir()
 			o = FileOpen(tmp, false);
 			if (o == NULL)
 			{
-				Print("Unable to use /tmp.\n\n");
-				exit(0);
+				Print("Unable to use temporary dir: (%s).\n\n", tmp);
+				exit(EXIT_FAILURE);
 			}
 		}
 
 		FileClose(o);
 
 		FileDelete(tmp);
+		#ifdef __ANDROID__
+		Free(tmpDir);
+		#endif
 	}
 }
 
diff --git a/src/Mayaqua/Unix.c b/src/Mayaqua/Unix.c
index 0c3778df..512afb9c 100755
--- a/src/Mayaqua/Unix.c
+++ b/src/Mayaqua/Unix.c
@@ -2728,6 +2728,7 @@ void UnixUsage(char *name)
 	UniPrint(_UU("UNIX_SVC_HELP"), svc_title, svc_name, svc_name, svc_title, svc_name, svc_title);
 }
 
+
 // Main function of the UNIX service
 UINT UnixService(int argc, char *argv[], char *name, SERVICE_FUNCTION *start, SERVICE_FUNCTION *stop)
 {
@@ -2737,6 +2738,14 @@ UINT UnixService(int argc, char *argv[], char *name, SERVICE_FUNCTION *start, SE
 		return 0;
 	}
 
+#ifdef __ANDROID__
+		// On Android, directly call UnixServiceMain without forking
+		if (argc >= 2 && StrCmpi(argv[1], UNIX_SVC_ARG_EXEC_SVC) == 0) {
+			UnixServiceMain(argc, argv, name, start, stop);
+		} else {
+			exit(EXIT_FAILURE);
+		}
+#else
 	if (argc >= 2 && StrCmpi(argv[1], UNIX_SVC_ARG_EXEC_SVC) == 0)
 	{
 		UINT pid;
@@ -2786,6 +2795,7 @@ RESTART_PROCESS:
 		// Start normally
 		UnixServiceMain(argc, argv, name, start, stop);
 	}
+#endif // __ANDROID__
 
 	return 0;
 }
diff --git a/src/vpnclient/vpncsvc.c b/src/vpnclient/vpncsvc.c
index 74d6da06..ca760655 100644
--- a/src/vpnclient/vpncsvc.c
+++ b/src/vpnclient/vpncsvc.c
@@ -43,4 +43,8 @@ int main(int argc, char *argv[])
 #endif	// OS_WIN32
 }
 
-
+#ifdef __ANDROID__
+extern int VpnClientMain(int argc, char *argv[]) {
+	return main(argc,argv);
+}
+#endif
